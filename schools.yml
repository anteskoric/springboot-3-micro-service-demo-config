server:
  port: 8070
spring:
  application:
    name: schools
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://postgresql-2:5432/schools
    username: user
    password: password
  jpa:
    hibernate:
      ddl-auto: create
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  flyway:
    enabled: true
    locations: classpath:db/migration
  cloud:
    kubernetes:
      discovery:
        enabled: true
      config:
        enabled: true
application:
  config:
    students-url: http://wrong_url
management:
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: ${spring.application.name}
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans
resilience:
  feature: fallback
  fallback-mocks:
    exampleFallback: '{"example": "example"}'
    findSchoolsWithStudents: '{ "name": "Doe", "email": "john.doe@example.com", "students":
      [] }'
    findAllStudentsBySchool: '[{ "id": 1, "firstname": "John", "lastname": "Doe",
      "email": "john.doe@example.com", "schoolId": 1}]'
    purchaseProducts: '[{ "productId": 1, "name": "Wireless Headphones", "description":
      "High-quality wireless headphones with noise cancellation", "price": 199.99,
      "quantity": 2 }]'
logging:
  level:
    com:
      alibou:
        school:
          client:
            StudentClient: DEBUG
